{"version":3,"file":"static/js/47.4c478bb3.chunk.js","mappings":"0KAsEA,UAhEuB,WACrB,IAAIA,EACFC,GAAqBC,EAAAA,EAAAA,UACjBC,GAAWC,EAAAA,EAAAA,MAoBjB,OACE,0BACE,iBAAKC,UAAU,YAAW,WACxB,wBAAI,sBACJ,mBACA,2BAAO,wBACP,kBACEC,UAAU,EACVC,OAAOC,EAAAA,EAAAA,MACPC,YAAY,aAEZC,KAAK,WAEP,mBACA,2BAAO,kBACP,kBACEC,IAAK,SAACC,GAAK,OAAMZ,EAAcY,CAAK,EACpCH,YAAY,eAEZC,KAAK,cAEP,mBACA,2BAAO,sBACP,kBACEC,IAAK,SAACC,GAAK,OAAMX,EAAqBW,CAAK,EAC3CH,YAAY,mBACZJ,UAAU,iCACVK,KAAK,cAEP,mBACA,mBACEG,QAjDU,WAChB,IAAIC,EAAWd,EAAYO,MACvBQ,EAAkBd,EAAmBM,OACrCS,EAAAA,EAAAA,IAAQF,IACVG,EAAAA,EAAAA,IAAW,sBACFD,EAAAA,EAAAA,IAAQD,IACjBE,EAAAA,EAAAA,IAAW,6BACFH,IAAaC,GACtBE,EAAAA,EAAAA,IAAW,+CAEXC,EAAAA,EAAAA,KAAwBV,EAAAA,EAAAA,OAAYW,EAAAA,EAAAA,MAAUL,GAAUM,MAAK,SAACC,IAC7C,IAAXA,GAEFlB,EAAS,SAEb,GAEJ,EAiCQE,UAAU,oDAAmD,SAC9D,aAMT,C","sources":["components/AccountRecover/CreatePassword.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { recoverResetPassRequest } from \"../../APIrequest/APIrequest\";\r\nimport { ErrorToast, isEmpty } from \"../../helper/FormHelper\";\r\nimport { getEmail, getOTP, removeSessions } from \"../../helper/SessionHelper\";\r\n\r\nconst CreatePassword = () => {\r\n  let passwordRef,\r\n    confirmPasswordRef = useRef();\r\n  const navigate = useNavigate();\r\n\r\n  const resetPass = () => {\r\n    let Password = passwordRef.value;\r\n    let ConfirmPassword = confirmPasswordRef.value;\r\n    if (isEmpty(Password)) {\r\n      ErrorToast(\"Password Required\");\r\n    } else if (isEmpty(ConfirmPassword)) {\r\n      ErrorToast(\"Confirm Password Required\");\r\n    } else if (Password !== ConfirmPassword) {\r\n      ErrorToast(\"Password & Confirm Password Should be Same\");\r\n    } else {\r\n      recoverResetPassRequest(getEmail(), getOTP(), Password).then((result) => {\r\n        if (result === true) {\r\n          // removeSessions()\r\n          navigate(\"/Login\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"card-body\">\r\n        <h4>SET NEW PASSWORD</h4>\r\n        <br />\r\n        <label>Your email address</label>\r\n        <input\r\n          readOnly={true}\r\n          value={getEmail()}\r\n          placeholder=\"User Email\"\r\n         \r\n          type=\"email\"\r\n        />\r\n        <br />\r\n        <label>New Password</label>\r\n        <input\r\n          ref={(input) => (passwordRef = input)}\r\n          placeholder=\"New Password\"\r\n         \r\n          type=\"password\"\r\n        />\r\n        <br />\r\n        <label>Confirm Password</label>\r\n        <input\r\n          ref={(input) => (confirmPasswordRef = input)}\r\n          placeholder=\"Confirm Password\"\r\n          className=\"form-control animated fadeInUp\"\r\n          type=\"password\"\r\n        />\r\n        <br />\r\n        <button\r\n          onClick={resetPass}\r\n          className=\"btn w-100 animated fadeInUp float-end btn-primary\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePassword;\r\n"],"names":["passwordRef","confirmPasswordRef","useRef","navigate","useNavigate","className","readOnly","value","getEmail","placeholder","type","ref","input","onClick","Password","ConfirmPassword","isEmpty","ErrorToast","recoverResetPassRequest","getOTP","then","result"],"sourceRoot":""}